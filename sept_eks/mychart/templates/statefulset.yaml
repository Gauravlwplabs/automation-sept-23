apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ include "mychart.fullname" . }}-redis-cluster
  labels:
  {{- include "mychart.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.redisCluster.replicas }}
  selector:
    matchLabels:
      app: redis-cluster
  serviceName: {{ include "mychart.fullname" . }}-redis-cluster
  template:
    metadata:
      labels:
        app: redis-cluster
    spec:
      containers:
      - command:
        - /conf/update-node.sh
        - redis-server
        - /conf/redis.conf
        env:
        - name: POD_IP
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
        - name: KUBERNETES_CLUSTER_DOMAIN
          value: {{ quote .Values.kubernetesClusterDomain }}
        image: {{ .Values.redisCluster.redis.image.repository }}:{{ .Values.redisCluster.redis.image.tag
          | default .Chart.AppVersion }}
        name: redis
        ports:
        - containerPort: 6379
          name: client
        - containerPort: 16379
          name: gossip
        resources: {}
        volumeMounts:
        - mountPath: /conf
          name: conf
        - mountPath: /data
          name: data
      volumes:
      - configMap:
          defaultMode: 493
          name: {{ include "mychart.fullname" . }}-redis-cluster
        name: conf
  updateStrategy: {}
  volumeClaimTemplates:
  - metadata:
      creationTimestamp: null
      name: data
    spec:
      accessModes:
      - ReadWriteOnce
      resources: {{ .Values.redisCluster.volumeClaims.data | toYaml | nindent 8 }}
      storageClassName: hostpath